<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AllDoneTips" xml:space="preserve">
    <value>The installation is complete, thank you for your support of TONX!</value>
  </data>
  <data name="DeleteUnusedPluginsWarning" xml:space="preserve">
    <value>The following mods will be removed after continuing</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="Download.BepInEx.Failed" xml:space="preserve">
    <value>Failed to downloading BepInEx</value>
  </data>
  <data name="Download.TONX.Failed" xml:space="preserve">
    <value>Failed to downloading TONX</value>
  </data>
  <data name="Download.TONX.Requesting" xml:space="preserve">
    <value>Requesting download TONX</value>
  </data>
  <data name="DownloadChannel.Gitee.Desc" xml:space="preserve">
    <value>The version is relatively backward</value>
  </data>
  <data name="DownloadChannel.Github.Desc" xml:space="preserve">
    <value>Stable, Recommended</value>
  </data>
  <data name="FailedTo.Cleanup" xml:space="preserve">
    <value>Failed to delete redundant files</value>
  </data>
  <data name="FailedTo.Extracting" xml:space="preserve">
    <value>Failed to extracting downloaded files</value>
  </data>
  <data name="GameFolder" xml:space="preserve">
    <value>Game Folder</value>
  </data>
  <data name="GameFolderEnterBoxPlaceholderText" xml:space="preserve">
    <value>Please select a valid Among Us folder used to install</value>
  </data>
  <data name="Install.BepInEx.Done" xml:space="preserve">
    <value>BepInEx Installed</value>
  </data>
  <data name="Install.BepInEx.Downloading" xml:space="preserve">
    <value>Downloading BepInEx</value>
  </data>
  <data name="Install.BepInEx.Extracting" xml:space="preserve">
    <value>Extracting BepInEx to game directory</value>
  </data>
  <data name="Install.BepInEx.Pending" xml:space="preserve">
    <value>Install BepInEx: Pending</value>
  </data>
  <data name="Install.TONX.Done" xml:space="preserve">
    <value>TONX Installed</value>
  </data>
  <data name="Install.TONX.Downloading" xml:space="preserve">
    <value>Downloading TONX</value>
  </data>
  <data name="Install.TONX.Pending" xml:space="preserve">
    <value>Install TONX: Pending</value>
  </data>
  <data name="InvalidGameFolderTips" xml:space="preserve">
    <value>Invalid Among Us game folder</value>
  </data>
  <data name="LastStep" xml:space="preserve">
    <value>Last Step</value>
  </data>
  <data name="NextStep" xml:space="preserve">
    <value>Next Step</value>
  </data>
  <data name="PlzTryAgainUsingOtherDownlodChennel" xml:space="preserve">
    <value>Please try again using another download channel</value>
  </data>
  <data name="PlzTryAgainWithUAC" xml:space="preserve">
    <value>Please try again with Administrator access</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="SelectDownloadChennel" xml:space="preserve">
    <value>Download channel</value>
  </data>
  <data name="Timeout" xml:space="preserve">
    <value>Timeout</value>
  </data>
  <data name="TownOfNextInstaller" xml:space="preserve">
    <value>TONX Installer</value>
  </data>
</root>